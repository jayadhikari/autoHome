
#include "IRTxRx.h"
#include "IRApplicationCode.h"
                      
/*uint16_t MusicON[95] = {2422, 556,  1232, 548,  638, 552,  1234, 550,  638, 554,  1232, 548,  640, 560,  
                        634, 556,  636, 554,  638, 552,  642, 552,  640, 552,  1236, 548,  1232, 552,  
                        636, 554,  638, 21490,  2440, 554,  1234, 550,  638, 552,  1236, 552,  634, 554,  
                        1232, 548,  640, 558,  634, 552,  640, 532,  660, 552,  640, 552,  640, 556,  1232, 
                        552,  1228, 548,  640, 554,  636, 21510,  2420, 554,  1232, 552,  634, 556,  1230, 
                        550,  638, 556,  1232, 554,  634, 554,  640, 532,  660, 552,  640, 554,  638, 556,  
                        638, 554,  1232, 550,  1230, 550,  640, 554,  638};  // SONY 540C*/

uint16_t MusicON[95] = {2426, 552,  1236, 546,  640, 550,  1236, 546,  640, 550,  1236, 546,  642, 552,  642, 
                        550,  644, 550,  642, 552,  638, 552,  642, 552,  1236, 546,  1236, 546,  642, 550,  
                        642, 21508,  2424, 558,  1228, 546,  642, 558,  1228, 544,  642, 554,  1232, 552,  636, 
                        554,  640, 552,  640, 552,  640, 550,  642, 552,  640, 558,  1230, 544,  1236, 546,  642, 
                        558,  634, 21510,  2422, 554,  1234, 546,  642, 558,  1228, 548,  640, 552,  1234, 554,  634, 
                        554,  640, 552,  642, 550,  644, 556,  634, 554,  640, 548,  1236, 548,  1232, 550,  638, 550,  642};  // SONY 540C
                        

uint16_t MusicFunction[95] = {2422, 556,  1232, 550,  638, 552,  642, 554,  1232, 548,  640, 554,  1232, 548,  
                        1232, 550,  640, 554,  638, 552,  640, 558,  634, 554,  1234, 548,  1232, 552,  
                        638, 538,  1248, 20324,  2422, 556,  1232, 550,  638, 536,  656, 556,  1232, 548,  
                        638, 554,  1234, 548,  1232, 552,  638, 552,  640, 560,  632, 558,  636, 552,  1232, 
                        550,  1230, 556,  634, 554,  1232, 20326,  2422, 554,  1232, 548,  638, 558,  636, 554,  
                        1232, 548,  640, 552,  1236, 552,  1230, 550,  638, 554,  638, 548,  644, 552,  640, 554,  
                        1232, 550,  1232, 554,  634, 554,  1232};  // SONY 4B0D

uint16_t MusicPlay[125] = {2444, 558,  636, 554,  1234, 546,  642, 534,  1250, 550,  1234, 548,  1232, 548,  
                          640, 552,  640, 554,  640, 558,  634, 556,  636, 552,  1234, 546,  640, 556,  636, 556,  
                          636, 554,  1232, 550,  638, 552,  640, 556,  636, 552,  642, 14932,  2440, 558,  636, 554,  
                          1232, 548,  638, 554,  1234, 552,  1230, 554,  1226, 552,  634, 530,  662, 554,  638, 552,  
                          640, 554,  640, 554,  1232, 550,  638, 552,  642, 550,  640, 550,  1236, 546,  642, 558,  636, 
                          550,  642, 552,  640, 14952,  2422, 556,  638, 552,  1234, 548,  640, 552,  1232, 548,  1234, 550,  
                          1232, 548,  640, 552,  640, 550,  642, 558,  634, 552,  640, 552,  1236, 548,  640, 556,  634, 556,  
                          638, 556,  1230, 548,  638, 552,  640, 554,  638, 554,  640};  // SONY 5C110

uint16_t MusicFwd[125] = {2424, 552,  1236, 546,  638, 552,  642, 552,  640, 552,  1236, 548,  1232, 548,  640, 552,  642, 552,  
                         638, 552,  640, 554,  638, 552,  1236, 546,  642, 554,  638, 554,  638, 552,  1234, 546,  642, 530,  662, 550,  642, 550,  642, 
                         15556,  2422, 554,  1232, 532,  656, 552,  640, 558,  636, 552,  1236, 532,  1248, 552,  636, 554,  638, 554,  638, 536,  656, 554,  
                         638, 552,  1236, 546,  642, 556,  636, 552,  640, 550,  1236, 546,  642, 554,  638, 556,  636, 550,  642, 15556,  2422, 556,  1232, 548,  
                         638, 554,  640, 554,  640, 552,  1234, 546,  1236, 546,  642, 550,  640, 552,  642, 552,  640, 552,  640, 552,  1234, 548,  638, 554,  
                         640, 554,  640, 550,  1236, 548,  640, 552,  640, 554,  640, 550,  642};  // SONY 8C110

uint16_t MusicPrev[125] = {2424, 558,  634, 554,  638, 558,  634, 552,  640, 554,  1232, 548,  1234, 530,  656, 558,  636, 554,  638, 554,  638, 552,  640, 
                        560,  1226, 548,  640, 556,  636, 552,  638, 554,  1234, 550,  638, 552,  640, 554,  640, 554,  638, 16162,  2422, 558,  636, 552,  
                        640, 556,  634, 554,  640, 552,  1234, 548,  1232, 546,  640, 560,  634, 554,  638, 552,  640, 552,  642, 552,  1236, 552,  634, 552,  
                        640, 558,  636, 552,  1232, 530,  658, 552,  640, 558,  634, 552,  642, 16160,  2424, 556,  638, 554,  638, 556,  638, 552,  640, 556,  
                        1228, 550,  1232, 548,  640, 552,  638, 554,  640, 558,  634, 552,  640, 558,  1226, 556,  634, 554,  638, 554,  638, 552,  1234, 548,  
                        640, 556,  636, 558,  634, 558,  634};  // SONY C110

uint16_t MusicVolUp[95] = {2422, 554,  640, 554,  1232, 552,  636, 552,  640, 552,  1234, 550,  640, 552,  638, 552,  640, 556,  636, 558,  634, 558,  634, 560,  
                        1228, 550,  1232, 546,  642, 550,  642, 22112,  2422, 556,  638, 558,  1228, 546,  640, 554,  638, 550,  1234, 548,  640, 554,  638, 550,  
                        644, 550,  640, 560,  634, 552,  640, 552,  1234, 546,  1236, 546,  642, 552,  640, 22094,  2442, 550,  642, 554,  1232, 548,  640, 550,  
                        642, 552,  1236, 548,  640, 552,  642, 552,  642, 550,  640, 556,  638, 558,  636, 552,  1234, 546,  1236, 548,  640, 552,  640};  // SONY 240C

uint16_t MusicVolDn[95] = {2424, 554,  1232, 550,  1232, 550,  638, 550,  642, 554,  1232, 548,  640, 554,  638, 552,  640, 556,  636, 554,  640, 556,  636, 554,  
                        1232, 550,  1232, 548,  640, 552,  642, 21506,  2422, 556,  1232, 554,  1228, 546,  640, 552,  640, 550,  1236, 548,  640, 552,  642, 554,  636, 552,  640, 554,  
                        640, 554,  636, 560,  1226, 550,  1230, 546,  642, 552,  638, 21510,  2420, 560,  1226, 548,  1234, 548,  640, 558,  636, 552,  1232, 552,  638, 544,  
                        650, 554,  638, 554,  638, 558,  634, 552,  640, 552,  1234, 548,  1234, 554,  634, 564,  628};  // SONY 640C
                        

uint16_t TvON[71] = {9058, 4540,  558, 584,  556, 584,  556, 1714,  556, 586,  556, 584,  556, 584,  
                        556, 584,  556, 584,  556, 1712,  558, 1712,  556, 584,  556, 1712,  556, 1714,  
                        556, 1712,  556, 1712,  558, 1712,  558, 584,  556, 584,  556, 584,  556, 1714,  
                        556, 584,  556, 584,  556, 586,  556, 584,  556, 1712,  558, 1712,  556, 1714,  
                        556, 584,  556, 1712,  556, 1712,  558, 1712,  556, 1714,  556, 40236,  9058, 2284,  558};  // NEC 20DF10EF

uint16_t TvUP[71] = {9086, 4516,  582, 556,  584, 556,  584, 1686,  584, 558,  584, 556,  584, 558,  584, 560,  582, 
                        558,  584, 1686,  584, 1686,  584, 558,  584, 1686,  584, 1676,  596, 1684,  586, 1684,  588, 1682,  
                        584, 558,  582, 556,  586, 560,  582, 558,  584, 560,  582, 556,  584, 1684,  584, 560,  582, 1688,  
                        584, 1684,  586, 1684,  584, 1686,  582, 1688,  584, 1684,  586, 558,  584, 1662,  604, 40260,  9090, 2254,  584};  // NEC 20DF02FD

uint16_t TvDn[71] = {9108, 4516,  580, 562,  580, 560,  582, 1698,  574, 560,  580, 562,  580, 562,  578, 560,  582, 538,  604, 
                        1694,  574, 1692,  580, 560,  580, 1690,  580, 1674,  596, 1688,  582, 1690,  580, 1690,  582, 1690,  578, 562,  
                        580, 562,  580, 562,  578, 560,  580, 562,  578, 1700,  572, 560,  580, 560,  580, 1694,  576, 1690,  580, 1688,  
                        580, 1690,  580, 1690,  580, 562,  582, 1690,  580, 40222,  9084, 2244,  596};  // NEC 20DF827D

uint16_t TvLeft[71] = {9088, 4512,  586, 556,  586, 560,  582, 1686,  582, 560,  586, 558,  582, 556,  584, 556,  586, 556,  
                      586, 1686,  584, 1686,  584, 558,  584, 1686,  584, 1684,  584, 1688,  584, 1686,  584, 1684,  586, 1686,  
                      582, 1686,  586, 1684,  582, 558,  584, 556,  584, 560,  582, 554,  586, 556,  586, 556,  582, 560,  584, 
                      560,  582, 1666,  604, 1688,  582, 1684,  586, 1686,  584, 1688,  580, 40260,  9086, 2258,  582};  // NEC 20DFE01F

uint16_t TvRight[71] = {9084, 4518,  580, 564,  576, 566,  578, 1702,  570, 562,  580, 562,  580, 560,  580, 562,  580, 562,  
                        580, 1700,  568, 1700,  570, 562,  580, 1698,  572, 1698,  572, 1700,  568, 1700,  572, 1700,  572, 562,  
                        578, 1700,  568, 1700,  572, 562,  578, 564,  578, 562,  580, 562,  578, 566,  578, 1698,  572, 562,  578, 
                        562,  580, 1698,  570, 1702,  570, 1700,  570, 1698,  570, 1698,  572, 40230,  9086, 2266,  576};  // NEC 20DF609F

uint16_t TvOK[71] = {9100, 4520,  578, 564,  578, 562,  580, 1700,  568, 564,  576, 566,  580, 562,  580, 562,  578, 564,  578, 
                    1702,  568, 1700,  570, 564,  578, 1702,  568, 1702,  570, 1698,  570, 1700,  572, 1700,  568, 564,  578, 562,  
                    578, 1702,  570, 562,  578, 564,  576, 568,  576, 1702,  570, 562,  580, 1698,  570, 1700,  570, 564,  576, 1702,  
                    572, 1700,  568, 1700,  572, 562,  578, 1700,  568, 40230,  9080, 2272,  572};  // NEC 20DF22DD



TVState_   TVState = TVEND;
                    
void initIR(void)
{  // Use turn on the save buffer feature for more complete capture coverage.  
  initCmdStr();
  irrecv.setUnknownThreshold(MIN_UNKNOWN_SIZE);
}

void enableIRRx(void)
{
   irrecv.enableIRIn();  // Start the receiver
}
void disableIRRx(void)
{
    irrecv.disableIRIn();  
}

void sendMusicCommand(void)
{
  irsend.sendRaw(MusicON, 95, 38);  // Send a raw data capture at 38kHz.
}
boolean sendTvCommand(void)
{
    static long getTime=0;
    boolean retVal= true;
    
    if(TVState == TVEND)
    {
        TVState = POWERON;//for the first entry start state machine
        
    }
    switch(TVState)
    {
        case POWERON:
            irsend.sendRaw(TvON, 71, 38);  // Send a raw data capture at 38kHz.
            TVState = UP1;
            getTime = millis();
            break;
        case UP1:
            if((millis() - getTime) > 19000)//19seconds later
            {
                irsend.sendRaw(TvUP, 71, 38);  // Send a raw data capture at 38kHz.
                TVState = TVOK;                
            }
            break;
        case TVOK:
            irsend.sendRaw(TvOK, 71, 38);  // Send a raw data capture at 38kHz.
            TVState = UP2;
            getTime = millis();
            break;
        case UP2:
            if((millis() - getTime) > 5000)
            {
              irsend.sendRaw(TvUP, 71, 38);  // Send a raw data capture at 38kHz.
              TVState = UP3;
            }
            break;
        case UP3:
            irsend.sendRaw(TvUP, 71, 38);  // Send a raw data capture at 38kHz.
            TVState = TVEND;
            retVal = false;
            break;            
    }
    return retVal;
}
void sendMusicFunctionCommand(void)
{
    irsend.sendRaw(MusicFunction, 95, 38);  // Send a raw data capture at 38kHz.
}

void sendMusicVolumeCommand(void)
{
    irsend.sendRaw(MusicVolUp, 95, 38);  // Send a raw data capture at 38kHz.
}
void sendMusicVolumeDownCommand(void)
{
    irsend.sendRaw(MusicVolDn, 95, 38);  // Send a raw data capture at 38kHz.
}


void sendIRCommand(uint16_t *rawD,int count)
{
  Serial.print("len of command= ");
  Serial.println(count);
  Serial.print("IR command being sent = ");
  for(int i=0;i<count;i++)
  {
    Serial.print(controlCmd[0].commandIR.duration[i]);
   // rawD++;
    //yield();  // Feed the WDT (again)
  }
  Serial.println("end of msg");
 // for(int i = 0; i < 3; i++) 
  {
    irsend.sendRaw(controlCmd[0].commandIR.duration, count, 40);  // Send a raw data capture at 38kHz.
   // irsend.sendRaw(rawData, 127, 38);  // Send a raw data capture at 38kHz.
  //  delay(50);
  }
  
  Serial.println("IR command sent");
  
}
void checkIRData(void)
{
  
  
}


